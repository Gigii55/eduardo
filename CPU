import java.util.Arrays;

public class CPU {
    private int pc;
    private int[] registradores;
    private int[] memoriaDados;
    private int[] memoriaInstrucoes;
    private Control unidadeDeControle;
    private lib biblioteca;

    public CPU (String caminhoDoArquivo) {

        this.pc = 0;
        this.registradores = new int[8];
        this.memoriaDados = new int[1024];
        this.unidadeDeControle = new Control();
        this.biblioteca = new lib();
        
        this.memoriaInstrucoes = biblioteca.load_binary(caminhoDoArquivo);


        if (this.memoriaInstrucoes == null || this.memoriaInstrucoes.length == 0) {
            System.err.println("AVISO: Nenhum programa foi carregado. O arquivo .bin pode estar vazio ou corrompido.");
            this.pc = -1;
        }
    }
    
    public void run() {
        
        if (this.pc == -1) {
            System.out.println("Execução abortada pois nenhum programa foi carregado.");
            return;
        }
        System.out.println("=== INICIANDO EXECUÇÃO DA CPU ===");
        while (this.pc != -1) {
            executarCiclo();
        }
        System.out.println("=== EXECUÇÃO FINALIZADA ===");
        System.out.println("Estado final dos registradores: " + Arrays.toString(registradores));
    }
    public int tam =0;

    public void executarCiclo() {
        
        if (pc < 0 || pc >= memoriaInstrucoes.length ) {
            this.pc = -1;
            return;
        }

        int instrucaoAtual = this.memoriaInstrucoes[pc];
        System.out.println("PC: " + pc + " | Lendo instrução: " + Integer.toBinaryString(instrucaoAtual));
        
        int proximoPc = unidadeDeControle.decodificarExecutar(instrucaoAtual, pc, registradores, memoriaDados, biblioteca);
        
        this.pc = proximoPc;
        System.out.println("    Estado dos Registradores: " + Arrays.toString(registradores));
        System.out.println("-------------------------------------------------");
    
    }
    }
